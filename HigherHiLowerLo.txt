# Hint: Plots consecutive (defined by number)  higher-highs AND lower-lows

input audibleAlerts = NO;
input price = close;
input number = 5;#hint number: Arrows are plotted after this number of consecutives are observed

# ATR bands
input atr_outer = 2.0;
input atr_length = 10;
input atr_ob = 100;
input atr_os = 5;
def averageType = AverageType.EXPONENTIAL;
def trueRangeAverageType = AverageType.EXPONENTIAL;
def OuterValueshift = atr_outer * MovingAverage(trueRangeAverageType, TrueRange(high, close, low), atr_length);
def average = MovingAverage(averageType, price, atr_length);
def UpperOuterBand = average + OuterValueshift;
def LowerOuterBand = average - OuterValueshift;
def apa = (price - LowerOuterBand) / (UpperOuterBand - LowerOuterBand) * 100;
def ATR_trig = if apa > atr_ob then 1 else if apa < atr_os then -1 else 0;
# end ATR bands

# Higher Hi / Lower Lo
def hi = high;
def lo = low;
def higher = if hi > hi[1] then hi else higher[1];
def lower = if lo < lo[1] then lo else lower[1];

plot h = higher;
h.SetLineWeight(1);
h.SetDefaultColor(Color.CYAN);
h.Hide();
plot l = lower;
l.SetLineWeight(1);
l.SetDefaultColor(Color.PINK);
l.Hide();

def hig = higher > higher[1];
def lowe = lower < lower[1];
# end Higher Hi / Lower Lo

plot x = Sum(hig, number) >= number and ATR_trig == 1;
x.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_DOWN);
x.SetLineWeight(3);
x.AssignValueColor(if x then Color.RED else Color.WHITE);

plot y = Sum(lowe, number) >= number and ATR_trig == -1;
y.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_UP);
y.SetLineWeight(3);
y.AssignValueColor(if y then Color.GREEN else Color.WHITE);

Alert(audibleAlerts and (x OR y), GetSymbol() + " at exhaustion.", Alert.BAR, Sound.Ding);

#end
