#HigherHiLowerLo
#hint: Plots consecutive (defined by number)  higher-highs AND lower-lows

input audibleAlerts = NO;
input price = close;
input number = 5;#hint number: Arrows are plotted after this number of consecutives are observed

# Bbands
input bbp_length = 20;
input bbp_os = 5;
input bbp_ob = 95;
def bbp = BollingerPercentB(length = bbp_length, "average type" = "EXPONENTIAL");
def bbp_trig = if bbp < bbp_os then -1 else if bbp > bbp_ob then 1 else double.nan;
# end Bbands

# Higher Hi / Lower Lo
def hi = high;
def lo = low;
def higher = if hi > hi[1] then hi else higher[1];
def lower = if lo < lo[1] then lo else lower[1];

plot h = higher;
h.SetLineWeight(1);
h.SetDefaultColor(Color.CYAN);
h.Hide();
plot l = lower;
l.SetLineWeight(1);
l.SetDefaultColor(Color.PINK);
l.Hide();

def hig = higher > higher[1];
def lowe = lower < lower[1];
# end Higher Hi / Lower Lo

plot x = Sum(hig, number) >= number and bbp_trig == 1;
x.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_DOWN);
x.SetLineWeight(3);
x.AssignValueColor(if x then Color.RED else Color.WHITE);

plot y = Sum(lowe, number) >= number and bbp_trig == -1;
y.SetPaintingStrategy(PaintingStrategy.BOOLEAN_ARROW_UP);
y.SetLineWeight(3);
y.AssignValueColor(if y then Color.GREEN else Color.WHITE);

Alert(audibleAlerts and (x OR y), GetSymbol() + " at exhaustion.", Alert.BAR, Sound.Ding);

#end
