# insync
# drew griffith

#hint: mean reversion entry strategy. optimized for daily charts

declare lower;

input os = 60;
input ob = 450;
input ntrend = 60;

# global definitions
def hi = high;
def lo = low;
def op = open;
def cl = close;

# study definitions
def bbp_length = 20;
def mfi_length = 14;
def sto_length = 14;
def rsi2_length = 2;
def rsi14_length = 14;

# study calcs
def rsi2 = RSI(length = rsi2_length);
def rsi14 = RSI(length = rsi14_length);
def mfi = MoneyFlowIndex(length = mfi_length);
def sto = StochasticFull("k period" = sto_length);
def bp = BollingerPercentB(length = bbp_length, "average type" = "exponential");
def bbp = if bp >= 100 then 100 else if bp <= 0 then 0 else bp;

# main plots
plot insync = Round(bbp + rsi2 + rsi14 + mfi + sto, numberofdigits = -1);
insync.SetLineWeight(2);
insync.AssignValueColor(if insync <= os or insync >= ob then Color.YELLOW else Color.GRAY);

# lower boundries of insync over the last ntrend periods
plot strat_ll = Round(Lowest(insync, ntrend));  #round to nearest whole number
strat_ll.SetDefaultColor(Color.DARK_GRAY);
strat_ll.SetLineWeight(1);

# upper boundries of insync over the last ntrend periods
plot strat_hh = Round(Highest(insync, ntrend));  #round to nearest whole number
strat_hh.SetDefaultColor(Color.DARK_GRAY);
strat_hh.SetLineWeight(1);

plot midline=250;
midline.SetDefaultColor(Color.DARK_GRAY);
midline.SetLineWeight(1);
