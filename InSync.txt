# InSync
# Drew Griffith

#hint: Mean Reversion ENTRY Strategy. The default inputs are based on stocks that are more volatile in nature. If you prefer to trade less volatile stocks, you should lower the extremities input. This strategy looks for long term trending stocks above EMA300, SMA200; Also, there are additional filters in place to ensure a better entry signal. The strategy is based on closing prices of the day of signal, so buy as close to the EOD as possible. The target is the high price of the day of entry. Ideal hold times are less than 5 days. On day 5, the position moves to breakeven. Optimized for use on daily charts.

declare lower;
input audibleAlerts = NO;
input paintbars = YES;
input extremities = 2.0;
input oversold = 50;
input overbought = 450;
input bbp_length = 20;
input mfi_length = 14;
input sto_length = 14;
def rsi2_length = 2;
def rsi14_length = 14;

# study definitions
def rsi2 = RSI(length = rsi2_length);
def rsi14 = RSI(length = rsi14_length);
def mfi = MoneyFlowIndex(length = mfi_length);
def sto = StochasticFull("k period" = sto_length);
def bp = BollingerPercentB(length = bbp_length, "average type" = "EXPONENTIAL");
def bbp = if bp >= 100 then 100 else if bp <= 0 then 0 else bp;

# plots
plot insync = Round(bbp + rsi2 + rsi14 + mfi + sto, numberofdigits = -1);
plot pos = overbought;
plot neg = oversold;
insync.AssignValueColor(if insync >= overbought then Color.RED else if insync <= oversold then Color.GREEN else Color.GRAY);
insync.SetLineWeight(3);
pos.AssignValueColor(Color.GREEN);
neg.AssignValueColor(Color.RED);
pos.HideTitle();
neg.HideTitle();

# Large move down / up
def ext = if close < open and ((high / close - 1) * 100) >= extremities then 1 else if close > open and ((close / low - 1) * 100) >= extremities then 1 else Double.NaN;

plot signal = if rsi2 <= 5 and mfi <= 35 and bbp <= 5 and rsi14 <= 30 and sto <= 20 and ext then insync else if rsi2 >= 95 and mfi >= 80 and bbp >= 95 and rsi14 >= 70 and sto >= 80 and ext then insync else Double.NaN;
#signal.hide();
signal.SetPaintingStrategy(paintingstrategy = PaintingStrategy.POINTS);
signal.SetLineWeight(5);
signal.AssignValueColor(Color.YELLOW);

AssignPriceColor(if paintbars and signal then Color.YELLOW else if paintbars and signal then Color.YELLOW else Color.CURRENT);

Alert(audibleAlerts and signal, GetSymbol() + " at exhaustion.", Alert.BAR, Sound.Ding);

## Needed for Watchlist box painting
#AssignBackgroundColor(if LE then Color.GREEN else Color.GRAY);
