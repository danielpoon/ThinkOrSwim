# InSync
# Drew Griffith

#hint: Mean Reversion ENTRY Strategy. The default inputs are based on stocks that are more volatile in nature. If you prefer to trade less volatile stocks, you should lower the extremities input. There are additional filters in place to ensure a better entry signal. The strategy is based on closing prices of the day of signal, so buy as close to the EOD as possible. The target is the high or open price of the day of entry. Ideal hold times are less than 5 days. Normally, around day 5, the position moves to breakeven. Optimized for use on daily charts.

declare lower;

input ext_os = 50;
input mod_os = 70;
input mod_ob = 450;
input ext_ob = 470;

# global definitions
#def hi = high;
#def lo = low;
#def cl = close;

def bbp_length = 20;
def mfi_length = 14;
def sto_length = 14;
def rsi2_length = 2;
def rsi14_length = 14;
def ma_lenth = 300;

# study definitions
def rsi2 = RSI(length = rsi2_length);
def rsi14 = RSI(length = rsi14_length);
def mfi = MoneyFlowIndex(length = mfi_length);
def sto = StochasticFull("k period" = sto_length);
def bp = BollingerPercentB(length = bbp_length, "average type" = "EXPONENTIAL");
def bbp = if bp >= 100 then 100 else if bp <= 0 then 0 else bp;
def em = ExpAverage(close, ma_lenth);
def ema = if close >= em then 1 else 0;

# main plots
plot insync = Round(bbp + rsi2 + rsi14 + mfi + sto, numberofdigits = -1);
plot pos = if ema == 1 then ext_ob else mod_ob;
plot neg = if ema == 0 then ext_os else mod_os;
insync.AssignValueColor(if insync >= pos then Color.RED else if insync <= neg then Color.GREEN else Color.GRAY);
insync.SetLineWeight(2);
pos.AssignValueColor(Color.DARK_RED);
neg.AssignValueColor(Color.DARK_GREEN);
pos.HideTitle();
neg.HideTitle();

# Large move down / up
input extremities = 1.0; # hint: set to daily by default. 1.0 rec for large caps; 2.0 for small camps
def ext = if close < open and ((high / close - 1) * 100) >= extremities then 1 else if close > open and ((close / low - 1) * 100) >= extremities then 1 else Double.NaN;

plot signal = if ext and insync <= neg then insync else if ext and insync >= pos then insync else Double.NaN;
signal.HideTitle();
signal.SetPaintingStrategy(paintingstrategy = PaintingStrategy.POINTS);
signal.SetLineWeight(5);
signal.AssignValueColor(if insync <= neg then Color.GREEN else if insync >= pos then Color.RED else Color.YELLOW);
input paintbars = YES;
AssignPriceColor(if paintbars and signal then Color.YELLOW else Color.CURRENT);

input audibleAlerts = NO;
Alert(audibleAlerts and signal, GetSymbol() + " at exhaustion.", Alert.BAR, Sound.Ding);

## Needed for Watchlist box painting
#AssignBackgroundColor(if insync <= pos then Color.GREEN else if insync >= pos then Color.RED else Color.GRAY);
