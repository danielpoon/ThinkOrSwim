#OneGlance by StanL updated by Drew Griffith
#Hint:The 'OneGlance' study evaluates 13 criteria in a bullish(green)/bearish(red) dashboard presentation. All study parameters and the bullish-bearish-triggers may be set via inputs.
# OVERVIEW: 'OneGlance' is by StanL. Emphasis has been put on clarity and flexibility: clarity via bubbles and labels; flexibility via input-setable parameters and triggers to match your trading style. The info bubbles in rdite studies often state the default values buil into TOS' studies.
# USAGE: 'OneGlance' uses up a lot of a chart's real estate and is much more readable when not squeezed; perhaps as an only lower study. One viewing option, when comparing a 'OneGlance' item to a corresponding full TOS chart, is to turn off the price data in 'chart Settings'. Depending on your vision quality and space availability, you may find a magnifier usage useful (google Magnifixer freeware).
#Usage re Righthand(RH) bubbles. These bubble can be made to expand into empty unused space to look good. To get the RH space select the PAN(upper-finger-pointer) in drawing tools and drag the chart to the left. Also see 'T-CHANGING RIGHT EXPANSION AREA SETTING'.
# POINT-OF-VIEW: 'OneGlance' is oriented (parameters and triggers) towards defining the bullish aspects of the studies used. Realize that if a study is not bullish, then it is not necessarily bearish. If you are bearish oriented, i.e. looking for short-opportunities, the modifying of parameters and triggers can enhance you bearish orientation.
#INPUTS: Because of the multitude of studies, the input list in 'Edit Studies' is long but components have been titled to make them self explanatory and with info-bubbles to further identify TOS default values.

declare lower;

input showlabels = yes;#hint showlabels:Toggles labels on/off.

def c = close;

## Setting window ##
#Used to manage space to set labels above this value. #Insert color to match your background to make line invisible
plot WhiteLabel = 0;
WhiteLabel.SetDefaultColor(Color.WHITE);
WhiteLabel.HideBubble();

plot topline = if IsNaN(close) then Double.NaN else 12;#Used to manage space to set labels above this value.
topline.SetDefaultColor(Color.black);#Insert color to match your background to make line invisible
topline.HideBubble();
## end - Setting window ##

## EMA Price Distance ##
def ma_lenth = 300;
def ema = ExpAverage(c, ma_lenth);
def dist = ((c - ema) / ((c + ema) / 2)) * 100;
def ema_trig = if dist > 0 then 1 else if dist < 0 then -1 else 0;
plot ema_line =  if IsNaN(c) then Double.NaN else 8;
ema_line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
ema_line.SetLineWeight(5);
ema_line.AssignValueColor(if ema_trig == 1 then Color.UPTICK else if ema_trig == -1 then Color.DOWNTICK else Color.GRAY);
ema_line.HideBubble();
AddLabel(showlabels, "EMA(" + ma_lenth + ") = " + Round(dist, 1), if ema_trig == 1 then Color.UPTICK else if ema_trig == -1 then Color.DOWNTICK else Color.GRAY);
## end - EMA Price Distance ##

# Higher Hi / Lower Lo
def number = 5;#hint number: Arrows are plotted after this number of consecutives are observed
def hi = high;
def lo = low;
def higher = if hi > hi[1] then hi else higher[1];
def lower = if lo < lo[1] then lo else lower[1];
def h = higher;
def l = lower;
def hig = higher > higher[1];
def lowe = lower < lower[1];
def hl_trig = if Sum(hig, number) >= number then 1 else if Sum(lowe, number) >= number then -1 else 0;
def hl_sum = if hig then Sum(hig, number) else if lowe then Sum(lowe, number) else 0;
plot hl_line = if IsNaN(c) then Double.NaN else 7;
hl_line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
hl_line.SetLineWeight(5);
hl_line.AssignValueColor(if hl_trig == 1 then Color.DOWNTICK else if hl_trig == -1 then Color.UPTICK else Color.GRAY);
hl_line.HideBubble();
AddLabel(showlabels, "HiLo(" + hl_line + ") = " + Round(hl_sum, 1), if hl_trig == 1 then Color.DOWNTICK else if hl_trig == -1 then Color.UPTICK else Color.GRAY);

# end Higher Hi / Lower Lo

## StochasticFull ##
def Sto_length = 14;
def Sto = StochasticFull("k period" = Sto_length);
def Sto_trig = if Sto >= 80 then 1 else if Sto <= 20 then -1 else 0;
plot Sto_line =  if IsNaN(c) then Double.NaN else 6;
Sto_line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
Sto_line.SetLineWeight(5);
Sto_line.AssignValueColor(if Sto_trig == 1 then Color.DOWNTICK else if Sto_trig == -1 then Color.UPTICK else Color.GRAY);
Sto_line.HideBubble();
AddLabel(showlabels, "Stoch(" + Sto_length + ") = " + Round(Sto, 1), if Sto_trig == 1 then Color.DOWNTICK else if Sto_trig == -1 then Color.UPTICK else Color.GRAY);
## end - StochasticFull ##

## MoneyFlowIndex ##
def mfi_length = 14;
def mfi = MoneyFlowIndex(length = mfi_length);
def mfi_trig = if mfi >= 70 then 1 else if mfi <= 35 then -1 else 0;
plot mfi_line =  if IsNaN(c) then Double.NaN else 5;
mfi_line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
mfi_line.SetLineWeight(5);
mfi_line.AssignValueColor(if mfi_trig == 1 then Color.DOWNTICK else if mfi_trig == -1 then Color.UPTICK else Color.GRAY);
mfi_line.HideBubble();
AddLabel(showlabels, "MFI(" + mfi_length + ") = " + Round(mfi, 1), if mfi_trig == 1 then Color.DOWNTICK else if mfi_trig == -1 then Color.UPTICK else Color.GRAY);
## end - MoneyFlowIndex ##

## RSI14 ##
def rsi14 = RSI(length = 14);
def rsi14_trig = if rsi14 >= 70 then 1 else if rsi14 <= 30 then -1 else 0;
plot rsi14_Line = if IsNaN(c) then Double.NaN else 4;
rsi14_Line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
rsi14_Line.SetLineWeight(5);
rsi14_Line.AssignValueColor(if rsi14_trig == 1 then Color.DOWNTICK else if rsi14_trig == -1 then Color.UPTICK else Color.GRAY);
rsi14_Line.HideBubble();
AddLabel(showlabels, "RSI(14) = " + Round(rsi14, 1), if rsi14_trig == 1 then Color.DOWNTICK else if rsi14_trig == -1 then Color.UPTICK else Color.GRAY);
## end - RSI14 ##

## RSI2 ##
def rsi2 = RSI(length = 2);
def rsi2_trig = if rsi2 >= 95 then 1 else if rsi2 <= 5 then -1 else 0;
plot rsi2_Line = if IsNaN(c) then Double.NaN else 3;
rsi2_Line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
rsi2_Line.SetLineWeight(5);
rsi2_Line.AssignValueColor(if rsi2_trig == 1 then Color.DOWNTICK else if rsi2_trig == -1 then Color.UPTICK else Color.GRAY);
rsi2_Line.HideBubble();
AddLabel(showlabels, "RSI(2) = " + Round(rsi2, 1), if rsi2_trig == 1 then Color.DOWNTICK else if rsi2_trig == -1 then Color.UPTICK else Color.GRAY);
## end - RSI14 ##

## BollingerBands ##
def bbp_length = 20;
def bbp = BollingerPercentB(length = bbp_length, "average type" = "EXPONENTIAL");
def bbp_trig = if bbp >= 95 then 1 else if bbp <= 5 then -1 else 0;
plot bbp_line =  if IsNaN(c) then Double.NaN else 2;
bbp_line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
bbp_line.SetLineWeight(5);
bbp_line.AssignValueColor(if bbp_trig == 1 then Color.DOWNTICK else if bbp_trig == -1 then Color.UPTICK else Color.GRAY);
bbp_line.HideBubble();
AddLabel(showlabels, "PctB(" + bbp_length + ") = " + Round(bbp, 1), if bbp_trig == 1 then Color.DOWNTICK else if bbp_trig == -1 then Color.UPTICK else Color.GRAY);
## end - BollingerBands ##

## ATR Bands ##
def atr_outer = 2.0;
def atr_length = 12;
def averageType = AverageType.EXPONENTIAL;
def trueRangeAverageType = AverageType.EXPONENTIAL;
def OuterValueshift = atr_outer * MovingAverage(trueRangeAverageType, TrueRange(high, close, low), atr_length);
def average = MovingAverage(averageType, c, atr_length);
def UpperOuterBand = average + OuterValueshift;
def LowerOuterBand = average - OuterValueshift;
def ATRBand = (c - LowerOuterBand) / (UpperOuterBand - LowerOuterBand) * 100;
def ATR_trig = if ATRBand >= 95 then 1 else if ATRBand <= 10 then -1 else 0;
plot atr_line =  if IsNaN(c) then Double.NaN else 1;
atr_line.SetPaintingStrategy(PaintingStrategy.LINE_VS_SQUARES);
atr_line.SetLineWeight(5);
atr_line.AssignValueColor(if ATR_trig == 1 then Color.DOWNTICK else if ATR_trig == -1 then Color.UPTICK else Color.GRAY);
atr_line.HideBubble();
AddLabel(showlabels, "ATR(" + atr_length + ") = " + Round(ATRBand, 1), if ATR_trig == 1 then Color.DOWNTICK else if ATR_trig == -1 then Color.UPTICK else Color.GRAY);
## end - ATR Bands ##

## END ALL
